#pragma checksum "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4cfc531af7a2edf0d339709b9f4e6a5b9652a0b5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(TournamentsWebApp.Pages.Pages_Tournament), @"mvc.1.0.razor-page", @"/Pages/Tournament.cshtml")]
namespace TournamentsWebApp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\_ViewImports.cshtml"
using TournamentsWebApp;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4cfc531af7a2edf0d339709b9f4e6a5b9652a0b5", @"/Pages/Tournament.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3851ab4f0456207173c20f2ef9b8ea01c87362c5", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Tournament : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 3 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
  
    if (User.Identity.IsAuthenticated)
    {
        Layout = "_Layout1";
    }
    else
    {
        Layout = "_Layout";
    }
    ViewData["Title"] = "Tournament";


#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"container-content\">\r\n");
#nullable restore
#line 17 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
      
        if (Model.tournament == null)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <h3>Page not found</h3>\r\n");
#nullable restore
#line 21 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
        }
        else
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <section class=\"container-info\">\r\n                <div>\r\n                    <h2>Tournament Information</h2>\r\n                    <p>Sport: ");
#nullable restore
#line 27 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                         Write(Model.tournament.SportType);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n                    <p>System: ");
#nullable restore
#line 28 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                          Write(Model.tournament.TournamentSystem);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n                    <p>Location: ");
#nullable restore
#line 29 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                            Write(Model.tournament.Location);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n                    <p>Start Date: ");
#nullable restore
#line 30 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                              Write(Model.tournament.StartDate);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n                    <p>End Date: ");
#nullable restore
#line 31 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                            Write(Model.tournament.EndDate);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n                    <p>Description: ");
#nullable restore
#line 32 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                               Write(Model.tournament.Description);

#line default
#line hidden
#nullable disable
            WriteLiteral("</p>\r\n                </div>\r\n            </section>\r\n");
#nullable restore
#line 35 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"

            if (Model.tournament.Status == ClassLibraryTournaments.Business.Status.cancelled)
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <p>Tournamnet is cancelled. No information available</p>\r\n");
#nullable restore
#line 39 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
            }
            else
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <section class=\"container-participants\">\r\n                    <div>\r\n                        <h2>Participants:</h2>\r\n                        <ul>\r\n\r\n");
#nullable restore
#line 47 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                             if (Model.players.Count == 0)
                            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                <li>No registered players yet.</li>\r\n");
#nullable restore
#line 50 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                            }
                            else
                            {
                                foreach (var player in Model.players)
                                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                                    <li>");
#nullable restore
#line 55 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                                   Write(player);

#line default
#line hidden
#nullable disable
            WriteLiteral("</li>\r\n");
#nullable restore
#line 56 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                                }
                            }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </ul>\r\n                    </div>\r\n                </section>\r\n                <section class=\"container-ranks\">\r\n\r\n");
#nullable restore
#line 64 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                     if (Model.ranking != null && Model.ranking.Count != 0)
                    {
                        if (Model.tournament.Status == ClassLibraryTournaments.Business.Status.finished)
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <h2>Ranking</h2>\r\n");
#nullable restore
#line 69 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                        }
                        else
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <h2>Current Ranking</h2>\r\n");
#nullable restore
#line 73 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                        }
                        int counter = 1;
                        string place;
                        foreach (var player in Model.ranking)
                        {
                            switch (counter)
                            {
                                case 1:
                                    place = "Gold";
                                    break;
                                case 2:
                                    place = "Silver";
                                    break;
                                case 3:
                                    place = "Bronze";
                                    break;
                                default:
                                    place = counter.ToString();
                                    break;
                            }

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <p>");
#nullable restore
#line 93 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                          Write(place);

#line default
#line hidden
#nullable disable
            WriteLiteral(": ");
#nullable restore
#line 93 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                                  Write(player.Key);

#line default
#line hidden
#nullable disable
            WriteLiteral(" - ");
#nullable restore
#line 93 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                                                Write(player.Value);

#line default
#line hidden
#nullable disable
            WriteLiteral(" points</p>\r\n");
#nullable restore
#line 94 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                            counter++;
                        }
                    }
                    else
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <h2>Ranking</h2>\r\n                        <p> No ranking present yet.</p>\r\n");
#nullable restore
#line 101 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                </section>\r\n");
#nullable restore
#line 103 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"


                if (Model.games != null && Model.games.Count != 0)
                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <section class=\"container-games\">\r\n                    <table>\r\n                        <tr>\r\n                            <th>Game</th>\r\n                            <th>Result</th>\r\n                        </tr>\r\n");
#nullable restore
#line 113 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                         foreach (var game in Model.games)
                        {

#line default
#line hidden
#nullable disable
            WriteLiteral("                            <tr>\r\n                                <td>");
#nullable restore
#line 116 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                               Write(Model.namesOfPlayersForGames[game.Player1Id]);

#line default
#line hidden
#nullable disable
            WriteLiteral(" - ");
#nullable restore
#line 116 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                                                                               Write(Model.namesOfPlayersForGames[game.Player2Id]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                                <td>");
#nullable restore
#line 117 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                               Write(game.Result1);

#line default
#line hidden
#nullable disable
            WriteLiteral(" - ");
#nullable restore
#line 117 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                                               Write(game.Result2);

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                            </tr>\r\n");
#nullable restore
#line 119 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                        }

#line default
#line hidden
#nullable disable
            WriteLiteral("                    </table>\r\n                </section>\r\n");
#nullable restore
#line 122 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                }
                else
                {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <p>No games present yet.</p>\r\n");
#nullable restore
#line 126 "D:\OneDrive\Работен плот\Synthesis\Repo\tournaments_synthesis\TournamentsSynthesis\TournamentsWebApp\Pages\Tournament.cshtml"
                }
            }

        }

    

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n</div>\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TournamentsWebApp.Pages.TournamentModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TournamentsWebApp.Pages.TournamentModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TournamentsWebApp.Pages.TournamentModel>)PageContext?.ViewData;
        public TournamentsWebApp.Pages.TournamentModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
